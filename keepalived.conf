# First we have to check if PostgreSQL is running
vrrp_script chk_psql_running {
    script "/etc/keepalived/check_psql_running.sh"
    interval 5 # number of intervals between every check
    fall 4 # If script returns non-zero f times in succession, enter FAULT state
    rise 1 # If script returns zero r times in succession, exit FAULT state
    timeout 1
}

# Checking network reachability
vrrp_script chk_network_isreachable {
    script "/etc/keepalived/check_network_isreachable.sh"
    interval 2 # number of tries between every check
    fall 10 # If script returns non-zero f times in succession, enter FAULT state
    rise 5 # If script returns zero r times in succession, exit FAULT state
}

# Checking node activity, correct it if possible
vrrp_script correct_node {
    script "/etc/keepalived/correct_node.sh"
    interval 40 # number of intervals between every check
    timeout 2
}

# Check if our local node holds MASTER status
vrrp_script chk_psql_local_master {
    script "/etc/keepalived/check_psql_local_master.sh"
    interval 5
    fall 2 # If script returns non-zero f times in succession, enter FAULT state
    rise 1 # If script returns zero r times in succession, exit FAULT state
}

# Scenario when both server holds the satus MASTER
vrrp_script chk_psql_both_master {
    script "/etc/keepalived/check_psql_both_master.sh"
    interval 10
}

vrrp_instance VIP_MAIN {
  state MASTER
  priority 100
  preempt

  interface eth1
  virtual_router_id 65
  advert_int 1

  authentication {
        auth_type PASS
        auth_pass zeS0EPYtb5
  }

  virtual_ipaddress {
                    10.10.10.10 dev eth1 scope global
          }

  # If these interfaces getdown we enter FAULT state
  track_interface {
        eth1
  }

  track_script {
      	chk_network_isreachable weight 50
        chk_psql_running weight 100
      	chk_psql_local_master weight 30
      	chk_psql_both_master weight -7
	      correct_node weight 1
  }
  
  notify_fault "/etc/keepalived/keepalived_state.sh FAULT"
  notify_stop "/etc/keepalived/keepalived_state.sh STOP"
  notify_backup "/etc/keepalived/psql_to_slave.sh"
  notify_master "/etc/keepalived/psql_to_master.sh"

}

